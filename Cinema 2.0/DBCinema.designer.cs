#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Cinema_2._0
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Cinema2")]
	public partial class DBCinemaDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertCinema(Cinema instance);
    partial void UpdateCinema(Cinema instance);
    partial void DeleteCinema(Cinema instance);
    partial void InsertEvent(Event instance);
    partial void UpdateEvent(Event instance);
    partial void DeleteEvent(Event instance);
    partial void InsertFavoriteCinema(FavoriteCinema instance);
    partial void UpdateFavoriteCinema(FavoriteCinema instance);
    partial void DeleteFavoriteCinema(FavoriteCinema instance);
    partial void InsertFavoriteEvent(FavoriteEvent instance);
    partial void UpdateFavoriteEvent(FavoriteEvent instance);
    partial void DeleteFavoriteEvent(FavoriteEvent instance);
    partial void InsertFavoriteFilm(FavoriteFilm instance);
    partial void UpdateFavoriteFilm(FavoriteFilm instance);
    partial void DeleteFavoriteFilm(FavoriteFilm instance);
    partial void InsertFilm(Film instance);
    partial void UpdateFilm(Film instance);
    partial void DeleteFilm(Film instance);
    partial void InsertLocation(Location instance);
    partial void UpdateLocation(Location instance);
    partial void DeleteLocation(Location instance);
    partial void InsertNotify(Notify instance);
    partial void UpdateNotify(Notify instance);
    partial void DeleteNotify(Notify instance);
    partial void InsertProducer(Producer instance);
    partial void UpdateProducer(Producer instance);
    partial void DeleteProducer(Producer instance);
    partial void InsertSchedule(Schedule instance);
    partial void UpdateSchedule(Schedule instance);
    partial void DeleteSchedule(Schedule instance);
    partial void InsertToken(Token instance);
    partial void UpdateToken(Token instance);
    partial void DeleteToken(Token instance);
    partial void InsertUpdateHistory(UpdateHistory instance);
    partial void UpdateUpdateHistory(UpdateHistory instance);
    partial void DeleteUpdateHistory(UpdateHistory instance);
    partial void InsertUser(User instance);
    partial void UpdateUser(User instance);
    partial void DeleteUser(User instance);
    partial void InsertUserRequest(UserRequest instance);
    partial void UpdateUserRequest(UserRequest instance);
    partial void DeleteUserRequest(UserRequest instance);
    #endregion
		
		public DBCinemaDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["Cinema2ConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DBCinemaDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DBCinemaDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DBCinemaDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DBCinemaDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<View_Cinema> View_Cinemas
		{
			get
			{
				return this.GetTable<View_Cinema>();
			}
		}
		
		public System.Data.Linq.Table<View_Event> View_Events
		{
			get
			{
				return this.GetTable<View_Event>();
			}
		}
		
		public System.Data.Linq.Table<Cinema> Cinemas
		{
			get
			{
				return this.GetTable<Cinema>();
			}
		}
		
		public System.Data.Linq.Table<Event> Events
		{
			get
			{
				return this.GetTable<Event>();
			}
		}
		
		public System.Data.Linq.Table<FavoriteCinema> FavoriteCinemas
		{
			get
			{
				return this.GetTable<FavoriteCinema>();
			}
		}
		
		public System.Data.Linq.Table<FavoriteEvent> FavoriteEvents
		{
			get
			{
				return this.GetTable<FavoriteEvent>();
			}
		}
		
		public System.Data.Linq.Table<FavoriteFilm> FavoriteFilms
		{
			get
			{
				return this.GetTable<FavoriteFilm>();
			}
		}
		
		public System.Data.Linq.Table<Film> Films
		{
			get
			{
				return this.GetTable<Film>();
			}
		}
		
		public System.Data.Linq.Table<Location> Locations
		{
			get
			{
				return this.GetTable<Location>();
			}
		}
		
		public System.Data.Linq.Table<Notify> Notifies
		{
			get
			{
				return this.GetTable<Notify>();
			}
		}
		
		public System.Data.Linq.Table<Producer> Producers
		{
			get
			{
				return this.GetTable<Producer>();
			}
		}
		
		public System.Data.Linq.Table<Schedule> Schedules
		{
			get
			{
				return this.GetTable<Schedule>();
			}
		}
		
		public System.Data.Linq.Table<Token> Tokens
		{
			get
			{
				return this.GetTable<Token>();
			}
		}
		
		public System.Data.Linq.Table<View_Schedule> View_Schedules
		{
			get
			{
				return this.GetTable<View_Schedule>();
			}
		}
		
		public System.Data.Linq.Table<UpdateHistory> UpdateHistories
		{
			get
			{
				return this.GetTable<UpdateHistory>();
			}
		}
		
		public System.Data.Linq.Table<User> Users
		{
			get
			{
				return this.GetTable<User>();
			}
		}
		
		public System.Data.Linq.Table<UserRequest> UserRequests
		{
			get
			{
				return this.GetTable<UserRequest>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.View_Cinema")]
	public partial class View_Cinema
	{
		
		private string _id;
		
		private string _name;
		
		private string _idProducer;
		
		private string _idLocation;
		
		private string _linkImage;
		
		private string _phoneNumber;
		
		private string _address;
		
		private string _intro;
		
		private string _longitude;
		
		private string _latitude;
		
		private string _Location;
		
		private string _Producer;
		
		public View_Cinema()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this._id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(300)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this._name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idProducer", DbType="NVarChar(100)")]
		public string idProducer
		{
			get
			{
				return this._idProducer;
			}
			set
			{
				if ((this._idProducer != value))
				{
					this._idProducer = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idLocation", DbType="NVarChar(100)")]
		public string idLocation
		{
			get
			{
				return this._idLocation;
			}
			set
			{
				if ((this._idLocation != value))
				{
					this._idLocation = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_linkImage", DbType="NVarChar(500)")]
		public string linkImage
		{
			get
			{
				return this._linkImage;
			}
			set
			{
				if ((this._linkImage != value))
				{
					this._linkImage = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phoneNumber", DbType="NVarChar(100)")]
		public string phoneNumber
		{
			get
			{
				return this._phoneNumber;
			}
			set
			{
				if ((this._phoneNumber != value))
				{
					this._phoneNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_address", DbType="NVarChar(500)")]
		public string address
		{
			get
			{
				return this._address;
			}
			set
			{
				if ((this._address != value))
				{
					this._address = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_intro", DbType="NVarChar(MAX)")]
		public string intro
		{
			get
			{
				return this._intro;
			}
			set
			{
				if ((this._intro != value))
				{
					this._intro = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_longitude", DbType="NVarChar(100)")]
		public string longitude
		{
			get
			{
				return this._longitude;
			}
			set
			{
				if ((this._longitude != value))
				{
					this._longitude = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_latitude", DbType="NVarChar(100)")]
		public string latitude
		{
			get
			{
				return this._latitude;
			}
			set
			{
				if ((this._latitude != value))
				{
					this._latitude = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Location", DbType="NVarChar(100)")]
		public string Location
		{
			get
			{
				return this._Location;
			}
			set
			{
				if ((this._Location != value))
				{
					this._Location = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Producer", DbType="NVarChar(100)")]
		public string Producer
		{
			get
			{
				return this._Producer;
			}
			set
			{
				if ((this._Producer != value))
				{
					this._Producer = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.View_Event")]
	public partial class View_Event
	{
		
		private string _id;
		
		private string _name;
		
		private string _idProducer;
		
		private string _time;
		
		private System.Nullable<System.DateTime> _endTime;
		
		private string _linkPoster;
		
		private string _intro;
		
		private string _Producer;
		
		public View_Event()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="NVarChar(300) NOT NULL", CanBeNull=false)]
		public string id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this._id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(500)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this._name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idProducer", DbType="NVarChar(100)")]
		public string idProducer
		{
			get
			{
				return this._idProducer;
			}
			set
			{
				if ((this._idProducer != value))
				{
					this._idProducer = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_time", DbType="NVarChar(50)")]
		public string time
		{
			get
			{
				return this._time;
			}
			set
			{
				if ((this._time != value))
				{
					this._time = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_endTime", DbType="Date")]
		public System.Nullable<System.DateTime> endTime
		{
			get
			{
				return this._endTime;
			}
			set
			{
				if ((this._endTime != value))
				{
					this._endTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_linkPoster", DbType="NVarChar(500)")]
		public string linkPoster
		{
			get
			{
				return this._linkPoster;
			}
			set
			{
				if ((this._linkPoster != value))
				{
					this._linkPoster = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_intro", DbType="NVarChar(MAX)")]
		public string intro
		{
			get
			{
				return this._intro;
			}
			set
			{
				if ((this._intro != value))
				{
					this._intro = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Producer", DbType="NVarChar(100)")]
		public string Producer
		{
			get
			{
				return this._Producer;
			}
			set
			{
				if ((this._Producer != value))
				{
					this._Producer = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Cinema")]
	public partial class Cinema : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _id;
		
		private string _name;
		
		private string _idProducer;
		
		private string _idLocation;
		
		private string _linkImage;
		
		private string _phoneNumber;
		
		private string _address;
		
		private string _intro;
		
		private string _longitude;
		
		private string _latitude;
		
		private EntitySet<FavoriteCinema> _FavoriteCinemas;
		
		private EntitySet<Schedule> _Schedules;
		
		private EntityRef<Location> _Location;
		
		private EntityRef<Producer> _Producer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(string value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnidProducerChanging(string value);
    partial void OnidProducerChanged();
    partial void OnidLocationChanging(string value);
    partial void OnidLocationChanged();
    partial void OnlinkImageChanging(string value);
    partial void OnlinkImageChanged();
    partial void OnphoneNumberChanging(string value);
    partial void OnphoneNumberChanged();
    partial void OnaddressChanging(string value);
    partial void OnaddressChanged();
    partial void OnintroChanging(string value);
    partial void OnintroChanged();
    partial void OnlongitudeChanging(string value);
    partial void OnlongitudeChanged();
    partial void OnlatitudeChanging(string value);
    partial void OnlatitudeChanged();
    #endregion
		
		public Cinema()
		{
			this._FavoriteCinemas = new EntitySet<FavoriteCinema>(new Action<FavoriteCinema>(this.attach_FavoriteCinemas), new Action<FavoriteCinema>(this.detach_FavoriteCinemas));
			this._Schedules = new EntitySet<Schedule>(new Action<Schedule>(this.attach_Schedules), new Action<Schedule>(this.detach_Schedules));
			this._Location = default(EntityRef<Location>);
			this._Producer = default(EntityRef<Producer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(100)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idProducer", DbType="VarChar(10)")]
		public string idProducer
		{
			get
			{
				return this._idProducer;
			}
			set
			{
				if ((this._idProducer != value))
				{
					if (this._Producer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidProducerChanging(value);
					this.SendPropertyChanging();
					this._idProducer = value;
					this.SendPropertyChanged("idProducer");
					this.OnidProducerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idLocation", DbType="VarChar(50)")]
		public string idLocation
		{
			get
			{
				return this._idLocation;
			}
			set
			{
				if ((this._idLocation != value))
				{
					if (this._Location.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidLocationChanging(value);
					this.SendPropertyChanging();
					this._idLocation = value;
					this.SendPropertyChanged("idLocation");
					this.OnidLocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_linkImage", DbType="VarChar(150)")]
		public string linkImage
		{
			get
			{
				return this._linkImage;
			}
			set
			{
				if ((this._linkImage != value))
				{
					this.OnlinkImageChanging(value);
					this.SendPropertyChanging();
					this._linkImage = value;
					this.SendPropertyChanged("linkImage");
					this.OnlinkImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phoneNumber", DbType="VarChar(70)")]
		public string phoneNumber
		{
			get
			{
				return this._phoneNumber;
			}
			set
			{
				if ((this._phoneNumber != value))
				{
					this.OnphoneNumberChanging(value);
					this.SendPropertyChanging();
					this._phoneNumber = value;
					this.SendPropertyChanged("phoneNumber");
					this.OnphoneNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_address", DbType="NVarChar(150)")]
		public string address
		{
			get
			{
				return this._address;
			}
			set
			{
				if ((this._address != value))
				{
					this.OnaddressChanging(value);
					this.SendPropertyChanging();
					this._address = value;
					this.SendPropertyChanged("address");
					this.OnaddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_intro", DbType="NVarChar(800)")]
		public string intro
		{
			get
			{
				return this._intro;
			}
			set
			{
				if ((this._intro != value))
				{
					this.OnintroChanging(value);
					this.SendPropertyChanging();
					this._intro = value;
					this.SendPropertyChanged("intro");
					this.OnintroChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_longitude", DbType="VarChar(50)")]
		public string longitude
		{
			get
			{
				return this._longitude;
			}
			set
			{
				if ((this._longitude != value))
				{
					this.OnlongitudeChanging(value);
					this.SendPropertyChanging();
					this._longitude = value;
					this.SendPropertyChanged("longitude");
					this.OnlongitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_latitude", DbType="VarChar(50)")]
		public string latitude
		{
			get
			{
				return this._latitude;
			}
			set
			{
				if ((this._latitude != value))
				{
					this.OnlatitudeChanging(value);
					this.SendPropertyChanging();
					this._latitude = value;
					this.SendPropertyChanged("latitude");
					this.OnlatitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cinema_FavoriteCinema", Storage="_FavoriteCinemas", ThisKey="id", OtherKey="idCinema")]
		public EntitySet<FavoriteCinema> FavoriteCinemas
		{
			get
			{
				return this._FavoriteCinemas;
			}
			set
			{
				this._FavoriteCinemas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cinema_Schedule", Storage="_Schedules", ThisKey="id", OtherKey="idCinema")]
		public EntitySet<Schedule> Schedules
		{
			get
			{
				return this._Schedules;
			}
			set
			{
				this._Schedules.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Location_Cinema", Storage="_Location", ThisKey="idLocation", OtherKey="id", IsForeignKey=true, DeleteRule="CASCADE")]
		public Location Location
		{
			get
			{
				return this._Location.Entity;
			}
			set
			{
				Location previousValue = this._Location.Entity;
				if (((previousValue != value) 
							|| (this._Location.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Location.Entity = null;
						previousValue.Cinemas.Remove(this);
					}
					this._Location.Entity = value;
					if ((value != null))
					{
						value.Cinemas.Add(this);
						this._idLocation = value.id;
					}
					else
					{
						this._idLocation = default(string);
					}
					this.SendPropertyChanged("Location");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Producer_Cinema", Storage="_Producer", ThisKey="idProducer", OtherKey="id", IsForeignKey=true, DeleteRule="CASCADE")]
		public Producer Producer
		{
			get
			{
				return this._Producer.Entity;
			}
			set
			{
				Producer previousValue = this._Producer.Entity;
				if (((previousValue != value) 
							|| (this._Producer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Producer.Entity = null;
						previousValue.Cinemas.Remove(this);
					}
					this._Producer.Entity = value;
					if ((value != null))
					{
						value.Cinemas.Add(this);
						this._idProducer = value.id;
					}
					else
					{
						this._idProducer = default(string);
					}
					this.SendPropertyChanged("Producer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_FavoriteCinemas(FavoriteCinema entity)
		{
			this.SendPropertyChanging();
			entity.Cinema = this;
		}
		
		private void detach_FavoriteCinemas(FavoriteCinema entity)
		{
			this.SendPropertyChanging();
			entity.Cinema = null;
		}
		
		private void attach_Schedules(Schedule entity)
		{
			this.SendPropertyChanging();
			entity.Cinema = this;
		}
		
		private void detach_Schedules(Schedule entity)
		{
			this.SendPropertyChanging();
			entity.Cinema = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Event")]
	public partial class Event : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _id;
		
		private string _name;
		
		private string _idProducer;
		
		private string _time;
		
		private System.Nullable<System.DateTime> _endTime;
		
		private string _linkPoster;
		
		private string _intro;
		
		private EntitySet<FavoriteEvent> _FavoriteEvents;
		
		private EntityRef<Producer> _Producer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(string value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnidProducerChanging(string value);
    partial void OnidProducerChanged();
    partial void OntimeChanging(string value);
    partial void OntimeChanged();
    partial void OnendTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnendTimeChanged();
    partial void OnlinkPosterChanging(string value);
    partial void OnlinkPosterChanged();
    partial void OnintroChanging(string value);
    partial void OnintroChanged();
    #endregion
		
		public Event()
		{
			this._FavoriteEvents = new EntitySet<FavoriteEvent>(new Action<FavoriteEvent>(this.attach_FavoriteEvents), new Action<FavoriteEvent>(this.detach_FavoriteEvents));
			this._Producer = default(EntityRef<Producer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="VarChar(150) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(200)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idProducer", DbType="VarChar(10)")]
		public string idProducer
		{
			get
			{
				return this._idProducer;
			}
			set
			{
				if ((this._idProducer != value))
				{
					if (this._Producer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidProducerChanging(value);
					this.SendPropertyChanging();
					this._idProducer = value;
					this.SendPropertyChanged("idProducer");
					this.OnidProducerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_time", DbType="NVarChar(50)")]
		public string time
		{
			get
			{
				return this._time;
			}
			set
			{
				if ((this._time != value))
				{
					this.OntimeChanging(value);
					this.SendPropertyChanging();
					this._time = value;
					this.SendPropertyChanged("time");
					this.OntimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_endTime", DbType="Date")]
		public System.Nullable<System.DateTime> endTime
		{
			get
			{
				return this._endTime;
			}
			set
			{
				if ((this._endTime != value))
				{
					this.OnendTimeChanging(value);
					this.SendPropertyChanging();
					this._endTime = value;
					this.SendPropertyChanged("endTime");
					this.OnendTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_linkPoster", DbType="VarChar(150)")]
		public string linkPoster
		{
			get
			{
				return this._linkPoster;
			}
			set
			{
				if ((this._linkPoster != value))
				{
					this.OnlinkPosterChanging(value);
					this.SendPropertyChanging();
					this._linkPoster = value;
					this.SendPropertyChanged("linkPoster");
					this.OnlinkPosterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_intro", DbType="NVarChar(MAX)")]
		public string intro
		{
			get
			{
				return this._intro;
			}
			set
			{
				if ((this._intro != value))
				{
					this.OnintroChanging(value);
					this.SendPropertyChanging();
					this._intro = value;
					this.SendPropertyChanged("intro");
					this.OnintroChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Event_FavoriteEvent", Storage="_FavoriteEvents", ThisKey="id", OtherKey="idEvent")]
		public EntitySet<FavoriteEvent> FavoriteEvents
		{
			get
			{
				return this._FavoriteEvents;
			}
			set
			{
				this._FavoriteEvents.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Producer_Event", Storage="_Producer", ThisKey="idProducer", OtherKey="id", IsForeignKey=true, DeleteRule="CASCADE")]
		public Producer Producer
		{
			get
			{
				return this._Producer.Entity;
			}
			set
			{
				Producer previousValue = this._Producer.Entity;
				if (((previousValue != value) 
							|| (this._Producer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Producer.Entity = null;
						previousValue.Events.Remove(this);
					}
					this._Producer.Entity = value;
					if ((value != null))
					{
						value.Events.Add(this);
						this._idProducer = value.id;
					}
					else
					{
						this._idProducer = default(string);
					}
					this.SendPropertyChanged("Producer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_FavoriteEvents(FavoriteEvent entity)
		{
			this.SendPropertyChanging();
			entity.Event = this;
		}
		
		private void detach_FavoriteEvents(FavoriteEvent entity)
		{
			this.SendPropertyChanging();
			entity.Event = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FavoriteCinema")]
	public partial class FavoriteCinema : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _idCinema;
		
		private string _email;
		
		private EntityRef<Cinema> _Cinema;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidCinemaChanging(string value);
    partial void OnidCinemaChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    #endregion
		
		public FavoriteCinema()
		{
			this._Cinema = default(EntityRef<Cinema>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idCinema", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string idCinema
		{
			get
			{
				return this._idCinema;
			}
			set
			{
				if ((this._idCinema != value))
				{
					if (this._Cinema.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidCinemaChanging(value);
					this.SendPropertyChanging();
					this._idCinema = value;
					this.SendPropertyChanged("idCinema");
					this.OnidCinemaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="VarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cinema_FavoriteCinema", Storage="_Cinema", ThisKey="idCinema", OtherKey="id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Cinema Cinema
		{
			get
			{
				return this._Cinema.Entity;
			}
			set
			{
				Cinema previousValue = this._Cinema.Entity;
				if (((previousValue != value) 
							|| (this._Cinema.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Cinema.Entity = null;
						previousValue.FavoriteCinemas.Remove(this);
					}
					this._Cinema.Entity = value;
					if ((value != null))
					{
						value.FavoriteCinemas.Add(this);
						this._idCinema = value.id;
					}
					else
					{
						this._idCinema = default(string);
					}
					this.SendPropertyChanged("Cinema");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_FavoriteCinema", Storage="_User", ThisKey="email", OtherKey="email", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.FavoriteCinemas.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.FavoriteCinemas.Add(this);
						this._email = value.email;
					}
					else
					{
						this._email = default(string);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FavoriteEvent")]
	public partial class FavoriteEvent : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _idEvent;
		
		private string _email;
		
		private EntityRef<Event> _Event;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidEventChanging(string value);
    partial void OnidEventChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    #endregion
		
		public FavoriteEvent()
		{
			this._Event = default(EntityRef<Event>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idEvent", DbType="VarChar(150) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string idEvent
		{
			get
			{
				return this._idEvent;
			}
			set
			{
				if ((this._idEvent != value))
				{
					if (this._Event.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidEventChanging(value);
					this.SendPropertyChanging();
					this._idEvent = value;
					this.SendPropertyChanged("idEvent");
					this.OnidEventChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="VarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Event_FavoriteEvent", Storage="_Event", ThisKey="idEvent", OtherKey="id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Event Event
		{
			get
			{
				return this._Event.Entity;
			}
			set
			{
				Event previousValue = this._Event.Entity;
				if (((previousValue != value) 
							|| (this._Event.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Event.Entity = null;
						previousValue.FavoriteEvents.Remove(this);
					}
					this._Event.Entity = value;
					if ((value != null))
					{
						value.FavoriteEvents.Add(this);
						this._idEvent = value.id;
					}
					else
					{
						this._idEvent = default(string);
					}
					this.SendPropertyChanged("Event");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_FavoriteEvent", Storage="_User", ThisKey="email", OtherKey="email", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.FavoriteEvents.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.FavoriteEvents.Add(this);
						this._email = value.email;
					}
					else
					{
						this._email = default(string);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FavoriteFilm")]
	public partial class FavoriteFilm : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _idFilm;
		
		private string _email;
		
		private EntityRef<Film> _Film;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidFilmChanging(string value);
    partial void OnidFilmChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    #endregion
		
		public FavoriteFilm()
		{
			this._Film = default(EntityRef<Film>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idFilm", DbType="VarChar(150) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string idFilm
		{
			get
			{
				return this._idFilm;
			}
			set
			{
				if ((this._idFilm != value))
				{
					if (this._Film.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidFilmChanging(value);
					this.SendPropertyChanging();
					this._idFilm = value;
					this.SendPropertyChanged("idFilm");
					this.OnidFilmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="VarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Film_FavoriteFilm", Storage="_Film", ThisKey="idFilm", OtherKey="id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Film Film
		{
			get
			{
				return this._Film.Entity;
			}
			set
			{
				Film previousValue = this._Film.Entity;
				if (((previousValue != value) 
							|| (this._Film.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Film.Entity = null;
						previousValue.FavoriteFilms.Remove(this);
					}
					this._Film.Entity = value;
					if ((value != null))
					{
						value.FavoriteFilms.Add(this);
						this._idFilm = value.id;
					}
					else
					{
						this._idFilm = default(string);
					}
					this.SendPropertyChanged("Film");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_FavoriteFilm", Storage="_User", ThisKey="email", OtherKey="email", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.FavoriteFilms.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.FavoriteFilms.Add(this);
						this._email = value.email;
					}
					else
					{
						this._email = default(string);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Film")]
	public partial class Film : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _id;
		
		private string _name;
		
		private System.Nullable<System.DateTime> _premiere;
		
		private string _length;
		
		private string _genre;
		
		private string _linkTrailer;
		
		private string _linkPoster;
		
		private string _linkBanner;
		
		private string _intro;
		
		private string _actor;
		
		private string _director;
		
		private string _country;
		
		private string _classification;
		
		private System.Nullable<bool> _isHot;
		
		private System.Nullable<double> _imdb;
		
		private EntitySet<FavoriteFilm> _FavoriteFilms;
		
		private EntitySet<Schedule> _Schedules;

        public List<Schedule> listSchedule;

        #region Extensibility Method Definitions
        partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(string value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnpremiereChanging(System.Nullable<System.DateTime> value);
    partial void OnpremiereChanged();
    partial void OnlengthChanging(string value);
    partial void OnlengthChanged();
    partial void OngenreChanging(string value);
    partial void OngenreChanged();
    partial void OnlinkTrailerChanging(string value);
    partial void OnlinkTrailerChanged();
    partial void OnlinkPosterChanging(string value);
    partial void OnlinkPosterChanged();
    partial void OnlinkBannerChanging(string value);
    partial void OnlinkBannerChanged();
    partial void OnintroChanging(string value);
    partial void OnintroChanged();
    partial void OnactorChanging(string value);
    partial void OnactorChanged();
    partial void OndirectorChanging(string value);
    partial void OndirectorChanged();
    partial void OncountryChanging(string value);
    partial void OncountryChanged();
    partial void OnclassificationChanging(string value);
    partial void OnclassificationChanged();
    partial void OnisHotChanging(System.Nullable<bool> value);
    partial void OnisHotChanged();
    partial void OnimdbChanging(System.Nullable<double> value);
    partial void OnimdbChanged();
    #endregion
		
		public Film()
		{
			this._FavoriteFilms = new EntitySet<FavoriteFilm>(new Action<FavoriteFilm>(this.attach_FavoriteFilms), new Action<FavoriteFilm>(this.detach_FavoriteFilms));
			this._Schedules = new EntitySet<Schedule>(new Action<Schedule>(this.attach_Schedules), new Action<Schedule>(this.detach_Schedules));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="VarChar(150) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(200)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_premiere", DbType="Date")]
		public System.Nullable<System.DateTime> premiere
		{
			get
			{
				return this._premiere;
			}
			set
			{
				if ((this._premiere != value))
				{
					this.OnpremiereChanging(value);
					this.SendPropertyChanging();
					this._premiere = value;
					this.SendPropertyChanged("premiere");
					this.OnpremiereChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_length", DbType="NVarChar(50)")]
		public string length
		{
			get
			{
				return this._length;
			}
			set
			{
				if ((this._length != value))
				{
					this.OnlengthChanging(value);
					this.SendPropertyChanging();
					this._length = value;
					this.SendPropertyChanged("length");
					this.OnlengthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_genre", DbType="NVarChar(100)")]
		public string genre
		{
			get
			{
				return this._genre;
			}
			set
			{
				if ((this._genre != value))
				{
					this.OngenreChanging(value);
					this.SendPropertyChanging();
					this._genre = value;
					this.SendPropertyChanged("genre");
					this.OngenreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_linkTrailer", DbType="VarChar(150)")]
		public string linkTrailer
		{
			get
			{
				return this._linkTrailer;
			}
			set
			{
				if ((this._linkTrailer != value))
				{
					this.OnlinkTrailerChanging(value);
					this.SendPropertyChanging();
					this._linkTrailer = value;
					this.SendPropertyChanged("linkTrailer");
					this.OnlinkTrailerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_linkPoster", DbType="VarChar(150)")]
		public string linkPoster
		{
			get
			{
				return this._linkPoster;
			}
			set
			{
				if ((this._linkPoster != value))
				{
					this.OnlinkPosterChanging(value);
					this.SendPropertyChanging();
					this._linkPoster = value;
					this.SendPropertyChanged("linkPoster");
					this.OnlinkPosterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_linkBanner", DbType="VarChar(150)")]
		public string linkBanner
		{
			get
			{
				return this._linkBanner;
			}
			set
			{
				if ((this._linkBanner != value))
				{
					this.OnlinkBannerChanging(value);
					this.SendPropertyChanging();
					this._linkBanner = value;
					this.SendPropertyChanged("linkBanner");
					this.OnlinkBannerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_intro", DbType="NVarChar(2000)")]
		public string intro
		{
			get
			{
				return this._intro;
			}
			set
			{
				if ((this._intro != value))
				{
					this.OnintroChanging(value);
					this.SendPropertyChanging();
					this._intro = value;
					this.SendPropertyChanged("intro");
					this.OnintroChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_actor", DbType="NVarChar(100)")]
		public string actor
		{
			get
			{
				return this._actor;
			}
			set
			{
				if ((this._actor != value))
				{
					this.OnactorChanging(value);
					this.SendPropertyChanging();
					this._actor = value;
					this.SendPropertyChanged("actor");
					this.OnactorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_director", DbType="NVarChar(100)")]
		public string director
		{
			get
			{
				return this._director;
			}
			set
			{
				if ((this._director != value))
				{
					this.OndirectorChanging(value);
					this.SendPropertyChanging();
					this._director = value;
					this.SendPropertyChanged("director");
					this.OndirectorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_country", DbType="NVarChar(10)")]
		public string country
		{
			get
			{
				return this._country;
			}
			set
			{
				if ((this._country != value))
				{
					this.OncountryChanging(value);
					this.SendPropertyChanging();
					this._country = value;
					this.SendPropertyChanged("country");
					this.OncountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_classification", DbType="VarChar(10)")]
		public string classification
		{
			get
			{
				return this._classification;
			}
			set
			{
				if ((this._classification != value))
				{
					this.OnclassificationChanging(value);
					this.SendPropertyChanging();
					this._classification = value;
					this.SendPropertyChanged("classification");
					this.OnclassificationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isHot", DbType="Bit")]
		public System.Nullable<bool> isHot
		{
			get
			{
				return this._isHot;
			}
			set
			{
				if ((this._isHot != value))
				{
					this.OnisHotChanging(value);
					this.SendPropertyChanging();
					this._isHot = value;
					this.SendPropertyChanged("isHot");
					this.OnisHotChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_imdb", DbType="Float")]
		public System.Nullable<double> imdb
		{
			get
			{
				return this._imdb;
			}
			set
			{
				if ((this._imdb != value))
				{
					this.OnimdbChanging(value);
					this.SendPropertyChanging();
					this._imdb = value;
					this.SendPropertyChanged("imdb");
					this.OnimdbChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Film_FavoriteFilm", Storage="_FavoriteFilms", ThisKey="id", OtherKey="idFilm")]
		public EntitySet<FavoriteFilm> FavoriteFilms
		{
			get
			{
				return this._FavoriteFilms;
			}
			set
			{
				this._FavoriteFilms.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Film_Schedule", Storage="_Schedules", ThisKey="id", OtherKey="idFilm")]
		public EntitySet<Schedule> Schedules
		{
			get
			{
				return this._Schedules;
			}
			set
			{
				this._Schedules.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_FavoriteFilms(FavoriteFilm entity)
		{
			this.SendPropertyChanging();
			entity.Film = this;
		}
		
		private void detach_FavoriteFilms(FavoriteFilm entity)
		{
			this.SendPropertyChanging();
			entity.Film = null;
		}
		
		private void attach_Schedules(Schedule entity)
		{
			this.SendPropertyChanging();
			entity.Film = this;
		}
		
		private void detach_Schedules(Schedule entity)
		{
			this.SendPropertyChanging();
			entity.Film = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Location")]
	public partial class Location : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _id;
		
		private string _name;
		
		private EntitySet<Cinema> _Cinemas;
		
		private EntitySet<User> _Users;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(string value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    #endregion
		
		public Location()
		{
			this._Cinemas = new EntitySet<Cinema>(new Action<Cinema>(this.attach_Cinemas), new Action<Cinema>(this.detach_Cinemas));
			this._Users = new EntitySet<User>(new Action<User>(this.attach_Users), new Action<User>(this.detach_Users));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(100)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Location_Cinema", Storage="_Cinemas", ThisKey="id", OtherKey="idLocation")]
		public EntitySet<Cinema> Cinemas
		{
			get
			{
				return this._Cinemas;
			}
			set
			{
				this._Cinemas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Location_User", Storage="_Users", ThisKey="id", OtherKey="idLocation")]
		public EntitySet<User> Users
		{
			get
			{
				return this._Users;
			}
			set
			{
				this._Users.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Cinemas(Cinema entity)
		{
			this.SendPropertyChanging();
			entity.Location = this;
		}
		
		private void detach_Cinemas(Cinema entity)
		{
			this.SendPropertyChanging();
			entity.Location = null;
		}
		
		private void attach_Users(User entity)
		{
			this.SendPropertyChanging();
			entity.Location = this;
		}
		
		private void detach_Users(User entity)
		{
			this.SendPropertyChanging();
			entity.Location = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Notify")]
	public partial class Notify : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private string _email;
		
		private string _idData;
		
		private string _categorie;
		
		private string _title;
		
		private string _message;
		
		private string _linkImage;
		
		private System.Nullable<bool> _state;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OnidDataChanging(string value);
    partial void OnidDataChanged();
    partial void OncategorieChanging(string value);
    partial void OncategorieChanged();
    partial void OntitleChanging(string value);
    partial void OntitleChanged();
    partial void OnmessageChanging(string value);
    partial void OnmessageChanged();
    partial void OnlinkImageChanging(string value);
    partial void OnlinkImageChanged();
    partial void OnstateChanging(System.Nullable<bool> value);
    partial void OnstateChanged();
    #endregion
		
		public Notify()
		{
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="VarChar(100)")]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idData", DbType="VarChar(200)")]
		public string idData
		{
			get
			{
				return this._idData;
			}
			set
			{
				if ((this._idData != value))
				{
					this.OnidDataChanging(value);
					this.SendPropertyChanging();
					this._idData = value;
					this.SendPropertyChanged("idData");
					this.OnidDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_categorie", DbType="VarChar(10)")]
		public string categorie
		{
			get
			{
				return this._categorie;
			}
			set
			{
				if ((this._categorie != value))
				{
					this.OncategorieChanging(value);
					this.SendPropertyChanging();
					this._categorie = value;
					this.SendPropertyChanged("categorie");
					this.OncategorieChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_title", DbType="NVarChar(50)")]
		public string title
		{
			get
			{
				return this._title;
			}
			set
			{
				if ((this._title != value))
				{
					this.OntitleChanging(value);
					this.SendPropertyChanging();
					this._title = value;
					this.SendPropertyChanged("title");
					this.OntitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_message", DbType="NVarChar(100)")]
		public string message
		{
			get
			{
				return this._message;
			}
			set
			{
				if ((this._message != value))
				{
					this.OnmessageChanging(value);
					this.SendPropertyChanging();
					this._message = value;
					this.SendPropertyChanged("message");
					this.OnmessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_linkImage", DbType="VarChar(150)")]
		public string linkImage
		{
			get
			{
				return this._linkImage;
			}
			set
			{
				if ((this._linkImage != value))
				{
					this.OnlinkImageChanging(value);
					this.SendPropertyChanging();
					this._linkImage = value;
					this.SendPropertyChanged("linkImage");
					this.OnlinkImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_state", DbType="Bit")]
		public System.Nullable<bool> state
		{
			get
			{
				return this._state;
			}
			set
			{
				if ((this._state != value))
				{
					this.OnstateChanging(value);
					this.SendPropertyChanging();
					this._state = value;
					this.SendPropertyChanged("state");
					this.OnstateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Notify", Storage="_User", ThisKey="email", OtherKey="email", IsForeignKey=true, DeleteRule="CASCADE")]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Notifies.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Notifies.Add(this);
						this._email = value.email;
					}
					else
					{
						this._email = default(string);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Producer")]
	public partial class Producer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _id;
		
		private string _name;
		
		private EntitySet<Cinema> _Cinemas;
		
		private EntitySet<Event> _Events;

        public List<Cinema> listCinema;
        public List<Event> listEvent;

        #region Extensibility Method Definitions
        partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(string value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    #endregion
		
		public Producer()
		{
			this._Cinemas = new EntitySet<Cinema>(new Action<Cinema>(this.attach_Cinemas), new Action<Cinema>(this.detach_Cinemas));
			this._Events = new EntitySet<Event>(new Action<Event>(this.attach_Events), new Action<Event>(this.detach_Events));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(100)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Producer_Cinema", Storage="_Cinemas", ThisKey="id", OtherKey="idProducer")]
		public EntitySet<Cinema> Cinemas
		{
			get
			{
				return this._Cinemas;
			}
			set
			{
				this._Cinemas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Producer_Event", Storage="_Events", ThisKey="id", OtherKey="idProducer")]
		public EntitySet<Event> Events
		{
			get
			{
				return this._Events;
			}
			set
			{
				this._Events.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Cinemas(Cinema entity)
		{
			this.SendPropertyChanging();
			entity.Producer = this;
		}
		
		private void detach_Cinemas(Cinema entity)
		{
			this.SendPropertyChanging();
			entity.Producer = null;
		}
		
		private void attach_Events(Event entity)
		{
			this.SendPropertyChanging();
			entity.Producer = this;
		}
		
		private void detach_Events(Event entity)
		{
			this.SendPropertyChanging();
			entity.Producer = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Schedule")]
	public partial class Schedule : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _id;
		
		private string _slot;
		
		private string _idFilm;
		
		private string _idCinema;
		
		private string _dateTime;
		
		private string _linkTicket;
		
		private EntityRef<Cinema> _Cinema;
		
		private EntityRef<Film> _Film;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(string value);
    partial void OnidChanged();
    partial void OnslotChanging(string value);
    partial void OnslotChanged();
    partial void OnidFilmChanging(string value);
    partial void OnidFilmChanged();
    partial void OnidCinemaChanging(string value);
    partial void OnidCinemaChanged();
    partial void OndateTimeChanging(string value);
    partial void OndateTimeChanged();
    partial void OnlinkTicketChanging(string value);
    partial void OnlinkTicketChanged();
    #endregion
		
		public Schedule()
		{
			this._Cinema = default(EntityRef<Cinema>);
			this._Film = default(EntityRef<Film>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="VarChar(150) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_slot", DbType="VarChar(10)")]
		public string slot
		{
			get
			{
				return this._slot;
			}
			set
			{
				if ((this._slot != value))
				{
					this.OnslotChanging(value);
					this.SendPropertyChanging();
					this._slot = value;
					this.SendPropertyChanged("slot");
					this.OnslotChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idFilm", DbType="VarChar(150)")]
		public string idFilm
		{
			get
			{
				return this._idFilm;
			}
			set
			{
				if ((this._idFilm != value))
				{
					if (this._Film.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidFilmChanging(value);
					this.SendPropertyChanging();
					this._idFilm = value;
					this.SendPropertyChanged("idFilm");
					this.OnidFilmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idCinema", DbType="VarChar(50)")]
		public string idCinema
		{
			get
			{
				return this._idCinema;
			}
			set
			{
				if ((this._idCinema != value))
				{
					if (this._Cinema.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidCinemaChanging(value);
					this.SendPropertyChanging();
					this._idCinema = value;
					this.SendPropertyChanged("idCinema");
					this.OnidCinemaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dateTime", DbType="VarChar(20)")]
		public string dateTime
		{
			get
			{
				return this._dateTime;
			}
			set
			{
				if ((this._dateTime != value))
				{
					this.OndateTimeChanging(value);
					this.SendPropertyChanging();
					this._dateTime = value;
					this.SendPropertyChanged("dateTime");
					this.OndateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_linkTicket", DbType="VarChar(300)")]
		public string linkTicket
		{
			get
			{
				return this._linkTicket;
			}
			set
			{
				if ((this._linkTicket != value))
				{
					this.OnlinkTicketChanging(value);
					this.SendPropertyChanging();
					this._linkTicket = value;
					this.SendPropertyChanged("linkTicket");
					this.OnlinkTicketChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cinema_Schedule", Storage="_Cinema", ThisKey="idCinema", OtherKey="id", IsForeignKey=true, DeleteRule="CASCADE")]
		public Cinema Cinema
		{
			get
			{
				return this._Cinema.Entity;
			}
			set
			{
				Cinema previousValue = this._Cinema.Entity;
				if (((previousValue != value) 
							|| (this._Cinema.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Cinema.Entity = null;
						previousValue.Schedules.Remove(this);
					}
					this._Cinema.Entity = value;
					if ((value != null))
					{
						value.Schedules.Add(this);
						this._idCinema = value.id;
					}
					else
					{
						this._idCinema = default(string);
					}
					this.SendPropertyChanged("Cinema");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Film_Schedule", Storage="_Film", ThisKey="idFilm", OtherKey="id", IsForeignKey=true, DeleteRule="CASCADE")]
		public Film Film
		{
			get
			{
				return this._Film.Entity;
			}
			set
			{
				Film previousValue = this._Film.Entity;
				if (((previousValue != value) 
							|| (this._Film.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Film.Entity = null;
						previousValue.Schedules.Remove(this);
					}
					this._Film.Entity = value;
					if ((value != null))
					{
						value.Schedules.Add(this);
						this._idFilm = value.id;
					}
					else
					{
						this._idFilm = default(string);
					}
					this.SendPropertyChanged("Film");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Token")]
	public partial class Token : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _idToken;
		
		private string _email;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidTokenChanging(string value);
    partial void OnidTokenChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    #endregion
		
		public Token()
		{
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idToken", DbType="VarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string idToken
		{
			get
			{
				return this._idToken;
			}
			set
			{
				if ((this._idToken != value))
				{
					this.OnidTokenChanging(value);
					this.SendPropertyChanging();
					this._idToken = value;
					this.SendPropertyChanged("idToken");
					this.OnidTokenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="VarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Token", Storage="_User", ThisKey="email", OtherKey="email", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Tokens.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Tokens.Add(this);
						this._email = value.email;
					}
					else
					{
						this._email = default(string);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.View_Schedule")]
	public partial class View_Schedule
	{
		
		private string _id;
		
		private string _slot;
		
		private string _idFilm;
		
		private string _idCinema;
		
		private string _dateTime;
		
		private string _linkTicket;
		
		public View_Schedule()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this._id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_slot", DbType="VarChar(10)")]
		public string slot
		{
			get
			{
				return this._slot;
			}
			set
			{
				if ((this._slot != value))
				{
					this._slot = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idFilm", DbType="VarChar(150)")]
		public string idFilm
		{
			get
			{
				return this._idFilm;
			}
			set
			{
				if ((this._idFilm != value))
				{
					this._idFilm = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idCinema", DbType="VarChar(50)")]
		public string idCinema
		{
			get
			{
				return this._idCinema;
			}
			set
			{
				if ((this._idCinema != value))
				{
					this._idCinema = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dateTime", DbType="VarChar(20)")]
		public string dateTime
		{
			get
			{
				return this._dateTime;
			}
			set
			{
				if ((this._dateTime != value))
				{
					this._dateTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_linkTicket", DbType="VarChar(300)")]
		public string linkTicket
		{
			get
			{
				return this._linkTicket;
			}
			set
			{
				if ((this._linkTicket != value))
				{
					this._linkTicket = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UpdateHistory")]
	public partial class UpdateHistory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _key;
		
		private string _date;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnkeyChanging(string value);
    partial void OnkeyChanged();
    partial void OndateChanging(string value);
    partial void OndateChanged();
    #endregion
		
		public UpdateHistory()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[key]", Storage="_key", DbType="NChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string key
		{
			get
			{
				return this._key;
			}
			set
			{
				if ((this._key != value))
				{
					this.OnkeyChanging(value);
					this.SendPropertyChanging();
					this._key = value;
					this.SendPropertyChanged("key");
					this.OnkeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date", DbType="Char(20) NOT NULL", CanBeNull=false)]
		public string date
		{
			get
			{
				return this._date;
			}
			set
			{
				if ((this._date != value))
				{
					this.OndateChanging(value);
					this.SendPropertyChanging();
					this._date = value;
					this.SendPropertyChanged("date");
					this.OndateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[User]")]
	public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _email;
		
		private string _name;
		
		private System.Nullable<System.DateTime> _birthday;
		
		private System.Nullable<bool> _male;
		
		private string _address;
		
		private string _phoneNumber;
		
		private string _linkAvatar;
		
		private string _password;
		
		private string _idLocation;
		
		private EntitySet<FavoriteCinema> _FavoriteCinemas;
		
		private EntitySet<FavoriteEvent> _FavoriteEvents;
		
		private EntitySet<FavoriteFilm> _FavoriteFilms;
		
		private EntitySet<Notify> _Notifies;
		
		private EntitySet<Token> _Tokens;
		
		private EntityRef<Location> _Location;

        public List<Cinema> listCinema;
        public List<Film> listFilm;
        public List<Event> listEvent;

        #region Extensibility Method Definitions
        partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnbirthdayChanging(System.Nullable<System.DateTime> value);
    partial void OnbirthdayChanged();
    partial void OnmaleChanging(System.Nullable<bool> value);
    partial void OnmaleChanged();
    partial void OnaddressChanging(string value);
    partial void OnaddressChanged();
    partial void OnphoneNumberChanging(string value);
    partial void OnphoneNumberChanged();
    partial void OnlinkAvatarChanging(string value);
    partial void OnlinkAvatarChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    partial void OnidLocationChanging(string value);
    partial void OnidLocationChanged();
    #endregion
		
		public User()
		{
			this._FavoriteCinemas = new EntitySet<FavoriteCinema>(new Action<FavoriteCinema>(this.attach_FavoriteCinemas), new Action<FavoriteCinema>(this.detach_FavoriteCinemas));
			this._FavoriteEvents = new EntitySet<FavoriteEvent>(new Action<FavoriteEvent>(this.attach_FavoriteEvents), new Action<FavoriteEvent>(this.detach_FavoriteEvents));
			this._FavoriteFilms = new EntitySet<FavoriteFilm>(new Action<FavoriteFilm>(this.attach_FavoriteFilms), new Action<FavoriteFilm>(this.detach_FavoriteFilms));
			this._Notifies = new EntitySet<Notify>(new Action<Notify>(this.attach_Notifies), new Action<Notify>(this.detach_Notifies));
			this._Tokens = new EntitySet<Token>(new Action<Token>(this.attach_Tokens), new Action<Token>(this.detach_Tokens));
			this._Location = default(EntityRef<Location>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="VarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(50)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_birthday", DbType="Date")]
		public System.Nullable<System.DateTime> birthday
		{
			get
			{
				return this._birthday;
			}
			set
			{
				if ((this._birthday != value))
				{
					this.OnbirthdayChanging(value);
					this.SendPropertyChanging();
					this._birthday = value;
					this.SendPropertyChanged("birthday");
					this.OnbirthdayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_male", DbType="Bit")]
		public System.Nullable<bool> male
		{
			get
			{
				return this._male;
			}
			set
			{
				if ((this._male != value))
				{
					this.OnmaleChanging(value);
					this.SendPropertyChanging();
					this._male = value;
					this.SendPropertyChanged("male");
					this.OnmaleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_address", DbType="NChar(150)")]
		public string address
		{
			get
			{
				return this._address;
			}
			set
			{
				if ((this._address != value))
				{
					this.OnaddressChanging(value);
					this.SendPropertyChanging();
					this._address = value;
					this.SendPropertyChanged("address");
					this.OnaddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phoneNumber", DbType="VarChar(50)")]
		public string phoneNumber
		{
			get
			{
				return this._phoneNumber;
			}
			set
			{
				if ((this._phoneNumber != value))
				{
					this.OnphoneNumberChanging(value);
					this.SendPropertyChanging();
					this._phoneNumber = value;
					this.SendPropertyChanged("phoneNumber");
					this.OnphoneNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_linkAvatar", DbType="VarChar(150)")]
		public string linkAvatar
		{
			get
			{
				return this._linkAvatar;
			}
			set
			{
				if ((this._linkAvatar != value))
				{
					this.OnlinkAvatarChanging(value);
					this.SendPropertyChanging();
					this._linkAvatar = value;
					this.SendPropertyChanged("linkAvatar");
					this.OnlinkAvatarChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="VarChar(50)")]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idLocation", DbType="VarChar(50)")]
		public string idLocation
		{
			get
			{
				return this._idLocation;
			}
			set
			{
				if ((this._idLocation != value))
				{
					if (this._Location.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidLocationChanging(value);
					this.SendPropertyChanging();
					this._idLocation = value;
					this.SendPropertyChanged("idLocation");
					this.OnidLocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_FavoriteCinema", Storage="_FavoriteCinemas", ThisKey="email", OtherKey="email")]
		public EntitySet<FavoriteCinema> FavoriteCinemas
		{
			get
			{
				return this._FavoriteCinemas;
			}
			set
			{
				this._FavoriteCinemas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_FavoriteEvent", Storage="_FavoriteEvents", ThisKey="email", OtherKey="email")]
		public EntitySet<FavoriteEvent> FavoriteEvents
		{
			get
			{
				return this._FavoriteEvents;
			}
			set
			{
				this._FavoriteEvents.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_FavoriteFilm", Storage="_FavoriteFilms", ThisKey="email", OtherKey="email")]
		public EntitySet<FavoriteFilm> FavoriteFilms
		{
			get
			{
				return this._FavoriteFilms;
			}
			set
			{
				this._FavoriteFilms.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Notify", Storage="_Notifies", ThisKey="email", OtherKey="email")]
		public EntitySet<Notify> Notifies
		{
			get
			{
				return this._Notifies;
			}
			set
			{
				this._Notifies.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Token", Storage="_Tokens", ThisKey="email", OtherKey="email")]
		public EntitySet<Token> Tokens
		{
			get
			{
				return this._Tokens;
			}
			set
			{
				this._Tokens.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Location_User", Storage="_Location", ThisKey="idLocation", OtherKey="id", IsForeignKey=true)]
		public Location Location
		{
			get
			{
				return this._Location.Entity;
			}
			set
			{
				Location previousValue = this._Location.Entity;
				if (((previousValue != value) 
							|| (this._Location.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Location.Entity = null;
						previousValue.Users.Remove(this);
					}
					this._Location.Entity = value;
					if ((value != null))
					{
						value.Users.Add(this);
						this._idLocation = value.id;
					}
					else
					{
						this._idLocation = default(string);
					}
					this.SendPropertyChanged("Location");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_FavoriteCinemas(FavoriteCinema entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_FavoriteCinemas(FavoriteCinema entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_FavoriteEvents(FavoriteEvent entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_FavoriteEvents(FavoriteEvent entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_FavoriteFilms(FavoriteFilm entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_FavoriteFilms(FavoriteFilm entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_Notifies(Notify entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Notifies(Notify entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_Tokens(Token entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Tokens(Token entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserRequest")]
	public partial class UserRequest : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private string _ip;
		
		private string _time;
		
		private string _note;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void OnipChanging(string value);
    partial void OnipChanged();
    partial void OntimeChanging(string value);
    partial void OntimeChanged();
    partial void OnnoteChanging(string value);
    partial void OnnoteChanged();
    #endregion
		
		public UserRequest()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ip", DbType="NChar(20)")]
		public string ip
		{
			get
			{
				return this._ip;
			}
			set
			{
				if ((this._ip != value))
				{
					this.OnipChanging(value);
					this.SendPropertyChanging();
					this._ip = value;
					this.SendPropertyChanged("ip");
					this.OnipChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_time", DbType="NChar(20)")]
		public string time
		{
			get
			{
				return this._time;
			}
			set
			{
				if ((this._time != value))
				{
					this.OntimeChanging(value);
					this.SendPropertyChanging();
					this._time = value;
					this.SendPropertyChanged("time");
					this.OntimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_note", DbType="NVarChar(200)")]
		public string note
		{
			get
			{
				return this._note;
			}
			set
			{
				if ((this._note != value))
				{
					this.OnnoteChanging(value);
					this.SendPropertyChanging();
					this._note = value;
					this.SendPropertyChanged("note");
					this.OnnoteChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
